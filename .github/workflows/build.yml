name: build
permissions:
  contents: write
on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (e.g., v1.0.1). Leave empty to use current ref if tag."
        required: false
        default: ""
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build bundled script
        run: |
          chmod +x bin/pbp-build
          ./bin/pbp-build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pbp
          path: bin/pbp
  release:
    if: startsWith(github.ref, 'refs/tags/') || inputs.tag != ''
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Resolve tag ref
        id: ref
        run: |
          if [[ -n "${{ inputs.tag }}" ]]; then
            echo "ref=refs/tags/${{ inputs.tag }}" >> $GITHUB_OUTPUT
            git fetch --tags --force --depth=1 origin "refs/tags/${{ inputs.tag }}:refs/tags/${{ inputs.tag }}"
            git checkout "refs/tags/${{ inputs.tag }}"
          else
            echo "ref=${GITHUB_REF}" >> $GITHUB_OUTPUT
          fi
      - name: Build
        run: |
          chmod +x bin/pbp-build
          ./bin/pbp-build
          echo "$(sha256sum bin/pbp | awk '{print $1}')  pbp" > checksums.txt
      - name: Compute release notes
        id: notes
        run: |
          TAG_REF=${GITHUB_REF#refs/tags/}
          SHORT_SHA=$(git rev-parse --short HEAD)
          DATE=$(date -u +%Y-%m-%d)
          
          # Get previous tag to generate changelog
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          printf "title<<EOF\n%s\nEOF\n" "$TAG_REF" >> "$GITHUB_OUTPUT"
          {
            echo "body<<EOF"
            echo "Version: $TAG_REF ($DATE)"
            echo "Commit: $SHORT_SHA"
            echo
            if [[ -n "$PREV_TAG" ]]; then
              echo "## Changes since $PREV_TAG"
              echo
              git log --pretty="- %s" "$PREV_TAG..HEAD"
            else
              echo "## Changes"
              echo
              git log --pretty="- %s" HEAD
            fi
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.notes.outputs.title }}
          body: ${{ steps.notes.outputs.body }}
          files: |
            bin/pbp
            checksums.txt
